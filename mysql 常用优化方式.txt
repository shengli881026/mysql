一、mysql 索引优化
1):单表数据百万量级,记录分页性能如何优化。
	limit 查询语句的查询时间是和起始记录的位置成正比。
	解决方法:利用表的覆盖索引、查询索引
	自增的id是主键索引。
	select id from product limit 866613, 20
	那么如果我们也要查询所有列，有两种方法，一种是id>=的形式，另一种就是利用join，看下实际情况：
	SELECT * FROM product WHERE ID > =(select id from product limit 866613, 1) limit 20
	查询时间为0.2秒，简直是一个质的飞跃啊，哈哈
2):mysql 组合索引
  有组合查询的sql,尽量建立组合索引。
  组合索引遵循最左优先原则:
  组合索引的第一个字段必须出现在查询组句中，这个索引才会被用到。
  下面情况都会用到索引
  例如:order_index(a,b,c) 
  where a=1,b=2,c=3;  
  where a=1,c=3;
  where a=1,b=3;
  下面情况不会用到索引
  where b=2,a=1;
  where c=2,a=1;
  where b=1,c=2;
  